worker_processes  1;
error_log logs/error.log;

events {
       worker_connections 1024;
}

http {

    # nginx correct process '.css .js' files
    include mime.types;
    default_type application/octet-stream;

    #lua lib path
    lua_package_path '/home/nnero/project/lua/openresty_test/lua/?.lua;/home/nnero/project/lua/openresty_test/lua/lib/?.lua;;';

    #production must be on
    lua_code_cache off;

    server {
            listen 8080;
            charset utf8;

            location ~ ^/favicon\.ico$ {
                root  html;
                log_not_found off;
                access_log off;
            }         

            location ~ .*\.(js|css|map)?$ {
                root html;
            }   
            
            location / {
                rewrite_by_lua_block {
                    return ngx.redirect("/render/login.html");
                }
            }                

            location /api/request {
                content_by_lua_file lua/api_request.lua;
            }

            location /api/get/sessionid {
                content_by_lua_file lua/api_sessionid.lua;
            }

            location /api/get/pt_sessionid {
                content_by_lua_file lua/api_ptsessionid.lua;
            }

            location /api/update/interface{
                content_by_lua_block {
                    local api = require('api_util')
                    local cjson = require('cjson')
                    api.updateInterfaceCache()
                    local result = {
                        msg='ok'
                    }
                    ngx.say(cjson.encode(result))
                }
            }

            location /render {
                root html;
                set $html_module "nil";
                if ($uri ~ (/([a-z]+)\.html)){
                    set $html_module $2;
                }
                content_by_lua_file lua/api/$html_module.lua;
            }
     }
}
